{"version":3,"sources":["components/views/RegisterView.module.css","components/views/RegisterView.js"],"names":["module","exports","Register","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","this","className","styles","autoComplete","form","label","type","onChange","button","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,SAAW,+BAA+B,MAAQ,4BAA4B,KAAO,2BAA2B,MAAQ,4BAA4B,OAAS,+B,mICOzKC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKZ,OACzB,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WACE,MAAkCU,KAAKb,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SACrB,OACE,sBAAKW,UAAWC,IAAOhB,SAAvB,UACE,8CACA,uBAAMa,SAAUC,KAAKL,aAAcQ,aAAa,MAAMF,UAAWC,IAAOE,KAAxE,UACE,wBAAOH,UAAWC,IAAOG,MAAzB,iBAEE,uBAAOC,KAAK,OAAOlB,KAAK,OAAOK,MAAOL,EAAMmB,SAAUP,KAAKT,kBAE7D,wBAAOU,UAAWC,IAAOG,MAAzB,kBAEE,uBAAOC,KAAK,QAAQlB,KAAK,QAAQK,MAAOJ,EAAOkB,SAAUP,KAAKT,kBAEhE,wBAAOU,UAAWC,IAAOG,MAAzB,qBAEE,uBAAOC,KAAK,WAAWlB,KAAK,WAAWK,MAAOH,EAAUiB,SAAUP,KAAKT,kBAEzE,wBAAQe,KAAK,SAASL,UAAWC,IAAOM,OAAxC,gC,GAnCaC,aAgDjBC,EAAqB,CACzBX,SAAUY,IAAeC,UAGZC,sBAAQ,KAAMH,EAAdG,CAAkC3B","file":"static/js/6.888410b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Register\":\"RegisterView_Register__YhqZO\",\"Login\":\"RegisterView_Login__1LbCD\",\"form\":\"RegisterView_form__1WY3b\",\"label\":\"RegisterView_label__1EH4P\",\"button\":\"RegisterView_button__3F3Q2\"};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport authOperations from '../../redux/auth/auth-operations';\n\nimport styles from './RegisterView.module.css';\n\nclass Register extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n    return (\n      <div className={styles.Register}>\n        <h1>Registration</h1>\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\" className={styles.form}>\n          <label className={styles.label}>\n            Name\n            <input type=\"text\" name=\"name\" value={name} onChange={this.handleChange} />\n          </label>\n          <label className={styles.label}>\n            Email\n            <input type=\"email\" name=\"email\" value={email} onChange={this.handleChange} />\n          </label>\n          <label className={styles.label}>\n            Password\n            <input type=\"password\" name=\"password\" value={password} onChange={this.handleChange} />\n          </label>\n          <button type=\"submit\" className={styles.button}>\n            Register\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  onSubmit: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(Register);\n"],"sourceRoot":""}