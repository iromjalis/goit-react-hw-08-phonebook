{"version":3,"sources":["redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","components/Container/Container.js","redux/auth/auth-selectors.js","components/Header/AuthNav/AuthNav.js","components/Header/UserMenu/UserMenu.js","components/Header/Header.js","components/PrivateRoute.js","components/PublicRoute.js","components/MyLoader/MyLoader.js","components/App.js","index.js","redux/contacts/contacts-actions.js","components/Header/Header.module.css","components/Header/AuthNav/AuthNav.module.css","redux/auth/auth-operations.js","components/Header/UserMenu/UserMenu.module.css","redux/auth/auth-actions.js","components/Container/Container.module.css"],"names":["fetchItemsRequest","contactsActions","fetchItemsSuccess","fetchItemsError","addItemRequest","addItemSuccess","addItemError","deleteItemRequest","deleteItemSuccess","deleteItemError","changeFilter","items","createReducer","_","payload","state","filter","id","loading","combineReducers","initialUserState","name","email","user","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","isAuthenticated","loginError","logoutError","getCurrentUserError","error","registerError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","Container","children","className","styles","AuthNav","to","link","activeClassName","activeLink","mapDispatchToProps","onLogout","authOperations","logout","connect","authSelectors","UserMenu","type","onClick","button","Header","list","exact","defaultProps","Component","component","redirectTo","routeProps","render","props","PublicRoute","restricted","MyLoader","color","height","width","ContactsView","lazy","HomeView","RegisterView","LoginView","App","this","onGetCurrentUser","fallback","path","getCurrentUser","ReactDOM","StrictMode","document","getElementById","createAction","module","exports","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","axios","defaults","baseURL","tok","headers","common","Authorization","register","credential","dispatch","a","post","data","message","login","getState","persistedToken","get"],"mappings":"oTAKEA,EAUEC,IAVFD,kBACAE,EASED,IATFC,kBACAC,EAQEF,IARFE,gBACAC,EAOEH,IAPFG,eACAC,EAMEJ,IANFI,eACAC,EAKEL,IALFK,aACAC,EAIEN,IAJFM,kBACAC,EAGEP,IAHFO,kBACAC,EAEER,IAFFQ,gBACAC,EACET,IADFS,aAGIC,EAAQC,YAAc,IAAD,mBACxBV,GAAoB,SAACW,EAAD,YAAMC,WADF,cAExBT,GAAiB,SAACU,EAAD,OAAUD,EAAV,EAAUA,QAAV,4BAA4BC,GAA5B,CAAmCD,OAF5B,cAGxBN,GAAoB,SAACO,EAAD,OAAUD,EAAV,EAAUA,QAAV,OACnBC,EAAMC,QAAO,qBAAGC,KAAgBH,QAJT,IAOrBE,EAASJ,YAAc,GAAD,eACzBF,GAAe,SAACG,EAAD,YAAMC,YAGlBI,EAAUN,aAAc,GAAD,mBAC1BZ,GAAoB,kBAAM,KADA,cAE1BE,GAAoB,kBAAM,KAFA,cAG1BC,GAAkB,kBAAM,KAHE,cAI1BC,GAAiB,kBAAM,KAJG,cAK1BC,GAAiB,kBAAM,KALG,cAM1BC,GAAe,kBAAM,KANK,cAO1BC,GAAoB,kBAAM,KAPA,cAQ1BC,GAAoB,kBAAM,KARA,cAS1BC,GAAkB,kBAAM,KATE,IAYdU,cAAgB,CAC7BR,QACAK,SACAE,Y,OCvCIE,EAAmB,CACvBC,KAAM,GACNC,MAAO,IAGHC,EAAOX,YAAcQ,GAAD,iBAAC,EACxBI,IAAYC,iBAAkB,SAACZ,EAAD,YAAMC,QAAsBS,QADnC,YAAC,EAExBC,IAAYE,cAAe,SAACb,EAAD,YAAMC,QAAsBS,QAFhC,YAAC,EAGxBC,IAAYG,eAAgB,kBAAMP,KAHX,YAAC,EAIxBI,IAAYI,uBAAwB,SAACf,EAAD,YAAMC,WAJnB,IAOpBe,EAAQjB,YAAc,IAAD,mBACxBY,IAAYC,iBAAkB,SAACZ,EAAD,YAAMC,QAAsBe,SADlC,cAExBL,IAAYE,cAAe,SAACb,EAAD,YAAMC,QAAsBe,SAF/B,cAGxBL,IAAYG,eAAgB,iBAAM,MAHV,IAMrBG,EAAkBlB,aAAc,GAAD,iBAAC,EACnCY,IAAYC,iBAAkB,kBAAM,KADF,YAAC,EAEnCD,IAAYE,cAAe,kBAAM,KAFC,YAAC,EAGnCF,IAAYI,uBAAwB,kBAAM,KAHR,YAAC,EAInCJ,IAAYO,YAAa,kBAAM,KAJG,YAAC,EAKnCP,IAAYQ,aAAc,kBAAM,KALE,YAAC,EAMnCR,IAAYS,qBAAsB,kBAAM,KANN,YAAC,EAOnCT,IAAYG,eAAgB,kBAAM,KAPA,IAU/BO,EAAQtB,YAAc,IAAD,mBACxBY,IAAYW,eAAgB,SAACtB,EAAD,YAAMC,WADV,cAExBU,IAAYO,YAAa,SAAClB,EAAD,YAAMC,WAFP,cAGxBU,IAAYQ,aAAc,SAACnB,EAAD,YAAMC,WAHR,cAIxBU,IAAYS,qBAAsB,SAACpB,EAAD,YAAMC,WAJhB,IAOZK,cAAgB,CAC7BI,OACAM,QACAC,kBACAI,UC5BIE,EAAU,YACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAK1DC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,KAAMC,YAAeR,EAAmBS,GACxCC,SAAUC,GAEZrB,aACAsB,UAAUC,IAKG,GAAET,QAAOU,UAFNC,YAAaX,I,4EC1BhBY,GARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,sBAAKC,UAAWC,KAAOH,UAAvB,SAAmCC,KCFtB,GAHY,SAAAhD,GAAK,OAAIA,EAAMsC,KAAKvB,iBAGhC,GAFK,SAAAf,GAAK,OAAIA,EAAMsC,KAAK9B,KAAKF,M,oBC0B9B6C,GAvBC,kBACd,sBAAIF,UAAWC,KAAOC,QAAtB,UACE,8BACE,eAAC,IAAD,CACEC,GAAG,YACHH,UAAWC,KAAOG,KAClBC,gBAAiBJ,KAAOK,WAH1B,wBAQF,8BACE,eAAC,IAAD,CACEH,GAAG,SACHH,UAAWC,KAAOG,KAClBC,gBAAiBJ,KAAOK,WAH1B,yB,oBCUAC,GAAqB,CACzBC,SAAUC,KAAeC,QAGZC,gBARS,SAAA5D,GAAK,MAAK,CAChCM,KAAMuD,GAA0B7D,MAOMwD,GAAzBI,EAtBE,SAAC,GAAD,IAAGtD,EAAH,EAAGA,KAAMmD,EAAT,EAASA,SAAT,OACf,uBAAKR,UAAWC,KAAOY,SAAvB,UACE,8CAAgBxD,KAChB,yBAAQyD,KAAK,SAASC,QAASP,EAAUR,UAAWC,KAAOe,OAA3D,0B,oBCDEC,GAAS,SAAC,GAAD,IAAGnD,EAAH,EAAGA,gBAAH,OACb,0BAAQkC,UAAWC,KAAOgB,OAA1B,UACE,sBAAIjB,UAAWC,KAAOiB,KAAtB,UACE,8BACE,eAAC,IAAD,CACEC,OAAK,EACLhB,GAAG,IACHH,UAAWC,KAAOG,KAClBC,gBAAiBJ,KAAOK,WAJ1B,oBASDxC,GACC,8BACE,eAAC,IAAD,CACEqC,GAAG,YACHH,UAAWC,KAAOG,KAClBC,gBAAiBJ,KAAOK,WAH1B,2BAULxC,EAAkB,eAAC,GAAD,IAAe,eAAC,GAAD,QAItCmD,GAAOG,aAAe,CACpBtD,iBAAiB,GAOnB,IAIe6C,gBAJS,SAAA5D,GAAK,MAAK,CAChCe,gBAAiB8C,GAAiC7D,MAGrC4D,CAAyBM,I,kECpBzBN,gBAJS,SAAA5D,GAAK,MAAK,CAChCe,gBAAiB8C,GAAiC7D,MAGrC4D,EAxBM,SAAC,GAAD,IACRU,EADQ,EACnBC,UACAxD,EAFmB,EAEnBA,gBACAyD,EAHmB,EAGnBA,WACGC,EAJgB,0BAMnB,eAAC,IAAD,6BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACX5D,EAAkB,eAACuD,EAAD,gBAAeK,IAAY,eAAC,IAAD,CAAUvB,GAAIoB,W,gDCT3DI,GAAc,SAAC,GAAD,IACPN,EADO,EAClBC,UACAxD,EAFkB,EAElBA,gBACAyD,EAHkB,EAGlBA,WACGC,EAJe,0BAMlB,eAAC,IAAD,6BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACX5D,GAAmB0D,EAAWI,WAC5B,eAAC,IAAD,CAAUzB,GAAIoB,IAEd,eAACF,EAAD,gBAAeK,SAMvBC,GAAYP,aAAe,CACzBG,WAAY,aASd,IAIeZ,gBAJS,SAAA5D,GAAK,MAAK,CAChCe,gBAAiB8C,GAAiC7D,MAGrC4D,CAAyBgB,I,oBChCzBE,GAJE,kBACf,eAAC,KAAD,CAAQf,KAAK,UAAUgB,MAAM,UAAUC,OAAQ,IAAKC,MAAO,OCQvDC,GAAeC,gBAAK,kBAAM,iCAC1BC,GAAWD,gBAAK,kBAAM,iCACtBE,GAAeF,gBAAK,kBAAM,iCAC1BG,GAAYH,gBAAK,kBAAM,iCAEvBI,G,uKACJ,WACEC,KAAKb,MAAMc,qB,oBAGb,WACE,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,eAAC,WAAD,CAAUC,SAAU,eAAC,GAAD,IAApB,SACE,gBAAC,IAAD,WACE,eAAC,GAAD,CAAatB,OAAK,EAACuB,KAAK,IAAIpB,UAAWa,KACvC,eAAC,GAAD,CACEO,KAAK,YACLpB,UAAWW,GACXV,WAAW,WAEb,eAAC,GAAD,CACEmB,KAAK,YACLpB,UAAWc,GACXb,WAAW,YACXK,YAAU,IAEZ,eAAC,GAAD,CACEc,KAAK,SACLpB,UAAWe,GACXd,WAAW,YACXK,YAAU,IAEZ,eAAC,IAAD,CAAUzB,GAAG,kB,GA7BPkB,aAyCZd,GAAqB,CACzBiC,iBAAkB/B,KAAekC,gBAGpBhC,eAAQ,KAAMJ,GAAdI,CAAkC2B,I,cC9CjDM,IAASnB,OACP,eAAC,IAAMoB,WAAP,UACE,eAAC,IAAD,CAAU3D,MAAOA,EAAMA,MAAvB,SACE,eAAC,IAAD,CAAahC,QAAS,eAAC,GAAD,IAAc0C,UAAWV,EAAMU,UAArD,SACE,eAAC,IAAD,UACE,eAAC,GAAD,YAKRkD,SAASC,eAAe,U,gCC1B1B,WAEM/G,EAAoBgH,YAAa,8BACjC9G,EAAoB8G,YAAa,8BACjC7G,EAAkB6G,YAAa,4BAE/B5G,EAAiB4G,YAAa,2BAC9B3G,EAAiB2G,YAAa,2BAC9B1G,EAAe0G,YAAa,yBAE5BzG,EAAoByG,YAAa,8BACjCxG,EAAoBwG,YAAa,8BACjCvG,EAAkBuG,YAAa,4BAE/BtG,EAAesG,YAAa,yBAEnB,KACbhH,oBACAE,oBACAC,kBACAC,iBACAC,iBACAC,eACAC,oBACAC,oBACAC,kBACAC,iB,mBCzBFuG,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,WAAa,6B,mBCAvHD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,WAAa,8B,qFCG7FC,EAYE3F,IAZF2F,gBACA1F,EAWED,IAXFC,gBACAU,EAUEX,IAVFW,cACAiF,EASE5F,IATF4F,aACA1F,EAQEF,IARFE,aACAK,EAOEP,IAPFO,WACAsF,EAME7F,IANF6F,cACA1F,EAKEH,IALFG,cACAK,EAIER,IAJFQ,YACAsF,EAGE9F,IAHF8F,sBACA1F,EAEEJ,IAFFI,sBACAK,EACET,IADFS,oBAGFsF,IAAMC,SAASC,QAAU,wCAEzB,IAAM5F,EAAQ,SACR6F,GACFH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAFtD7F,EAAQ,WAKV0F,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAuDnC,KAAEC,SAnDA,SAAAC,GAAU,8CAAI,WAAMC,GAAN,iBAAAC,EAAA,6DAC7BD,EAASb,KADoB,kBAGJI,IAAMW,KAAK,gBAAiBH,GAHxB,gBAGnBI,EAHmB,EAGnBA,KACRtG,EAAUsG,EAAKtG,OACfmG,EAASvG,EAAgB0G,IALE,kDAO3BH,EAAS7F,EAAc,KAAMiG,UAPF,0DAAJ,uDAmDAC,MAxCb,SAAAN,GAAU,8CAAI,WAAMC,GAAN,iBAAAC,EAAA,6DAC1BD,EAASZ,KADiB,kBAGDG,IAAMW,KAAK,eAAgBH,GAH1B,gBAGhBI,EAHgB,EAGhBA,KACRtG,EAAUsG,EAAKtG,OACfmG,EAAStG,EAAayG,IALE,kDAOxBH,EAASjG,EAAW,KAAMqG,UAPF,0DAAJ,uDAwCU1D,OA7BnB,yDAAM,WAAMsD,GAAN,SAAAC,EAAA,6DACnBD,EAASX,KADU,kBAGXE,IAAMW,KAAK,iBAHA,OAIjBrG,IACAmG,EAASrG,KALQ,gDAOjBqG,EAAShG,EAAY,KAAMoG,UAPV,yDAAN,uDA6B2BzB,eAlBnB,yDAAM,WAAOqB,EAAUM,GAAjB,qBAAAL,EAAA,2DAGvBK,IADaC,EAFU,EAEzBlF,KAAQxB,MAFiB,wDAO3BA,EAAU0G,GAEVP,EAASV,KATkB,kBAWFC,IAAMiB,IAAI,kBAXR,gBAWjBL,EAXiB,EAWjBA,KACRH,EAASpG,EAAsBuG,IAZN,kDAczBH,EAAS/F,EAAoB,KAAMmG,UAdV,0DAAN,2D,mBC7DvBnB,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,2B,+BCDjE,WAEMC,EAAkBH,YAAa,wBAC/BvF,EAAkBuF,YAAa,wBAC/B7E,EAAgB6E,YAAa,sBAE7BI,EAAeJ,YAAa,qBAC5BtF,EAAesF,YAAa,qBAC5BjF,EAAaiF,YAAa,mBAE1BK,EAAgBL,YAAa,sBAC7BrF,EAAgBqF,YAAa,sBAC7BhF,EAAcgF,YAAa,oBAE3BM,EAAwBN,YAAa,8BACrCpF,EAAwBoF,YAAa,8BACrC/E,EAAsB+E,YAAa,4BAE1B,KACbG,kBACA1F,kBACAU,gBACAiF,eACA1F,eACAK,aACAsF,gBACA1F,gBACAK,cACAsF,wBACA1F,wBACAK,wB,mBC7BFgF,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.3262f7ea.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './contacts-actions';\n\nconst {\n  fetchItemsRequest,\n  fetchItemsSuccess,\n  fetchItemsError,\n  addItemRequest,\n  addItemSuccess,\n  addItemError,\n  deleteItemRequest,\n  deleteItemSuccess,\n  deleteItemError,\n  changeFilter,\n} = contactsActions;\n\nconst items = createReducer([], {\n  [fetchItemsSuccess]: (_, { payload }) => payload,\n  [addItemSuccess]: (state, { payload }) => [...state, payload],\n  [deleteItemSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchItemsRequest]: () => true,\n  [fetchItemsSuccess]: () => false,\n  [fetchItemsError]: () => false,\n  [addItemRequest]: () => true,\n  [addItemSuccess]: () => false,\n  [addItemError]: () => false,\n  [deleteItemRequest]: () => true,\n  [deleteItemSuccess]: () => false,\n  [deleteItemError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = {\n  name: '',\n  email: '',\n};\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer('', {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => '',\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.loginError]: () => false,\n  [authActions.logoutError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nconst error = createReducer('', {\n  [authActions.registerError]: (_, { payload }) => payload,\n  [authActions.loginError]: (_, { payload }) => payload,\n  [authActions.logoutError]: (_, { payload }) => payload,\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  isAuthenticated,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\nconst getUserName = state => state.auth.user.name;\n\nexport default { getIsAuthenticated, getUserName };\n","import { NavLink } from 'react-router-dom';\n\nimport styles from './AuthNav.module.css';\n\nconst AuthNav = () => (\n  <ul className={styles.AuthNav}>\n    <li>\n      <NavLink\n        to=\"/register\"\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        Register\n      </NavLink>\n    </li>\n    <li>\n      <NavLink\n        to=\"/login\"\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        Login\n      </NavLink>\n    </li>\n  </ul>\n);\n\nexport default AuthNav;\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport authOperations from '../../../redux/auth/auth-operations';\nimport authSelectors from '../../../redux/auth/auth-selectors';\n\nimport styles from './UserMenu.module.css';\n\nconst UserMenu = ({ name, onLogout }) => (\n  <div className={styles.UserMenu}>\n    <span>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout} className={styles.button}>\n      Logout\n    </button>\n  </div>\n);\n\nUserMenu.propTypes = {\n  name: PropTypes.string.isRequired,\n  onLogout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUserName(state),\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logout,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport AuthNav from './AuthNav';\nimport UserMenu from './UserMenu';\n\nimport styles from './Header.module.css';\n\nconst Header = ({ isAuthenticated }) => (\n  <header className={styles.Header}>\n    <ul className={styles.list}>\n      <li>\n        <NavLink\n          exact\n          to=\"/\"\n          className={styles.link}\n          activeClassName={styles.activeLink}\n        >\n          Home\n        </NavLink>\n      </li>\n      {isAuthenticated && (\n        <li>\n          <NavLink\n            to=\"/contacts\"\n            className={styles.link}\n            activeClassName={styles.activeLink}\n          >\n            Contacts\n          </NavLink>\n        </li>\n      )}\n    </ul>\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nHeader.defaultProps = {\n  isAuthenticated: false,\n};\n\nHeader.propTypes = {\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  redirectTo: PropTypes.string.isRequired,\n  component: PropTypes.elementType.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPublicRoute.defaultProps = {\n  redirectTo: '/contacts',\n};\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  redirectTo: PropTypes.string,\n  component: PropTypes.elementType.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nconst MyLoader = () => (\n  <Loader type=\"Circles\" color=\"#3f51b5\" height={100} width={100} />\n);\n\nexport default MyLoader;\n","import { Component, Suspense, lazy } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Switch, Redirect } from 'react-router-dom';\n\nimport authOperations from '../redux/auth/auth-operations';\nimport Container from './Container';\nimport Header from './Header';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\nimport MyLoader from './MyLoader';\n\nconst ContactsView = lazy(() => import('./views/ContactsView'));\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <Header />\n        <Suspense fallback={<MyLoader />}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PrivateRoute\n              path=\"/contacts\"\n              component={ContactsView}\n              redirectTo=\"/login\"\n            />\n            <PublicRoute\n              path=\"/register\"\n              component={RegisterView}\n              redirectTo=\"/contacts\"\n              restricted\n            />\n            <PublicRoute\n              path=\"/login\"\n              component={LoginView}\n              redirectTo=\"/contacts\"\n              restricted\n            />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  onGetCurrentUser: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nimport App from './components/App';\nimport MyLoader from './components/MyLoader';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\n/* eslint no-undef: \"error\" */\n/* eslint-env browser */\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={<MyLoader />} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchItemsRequest = createAction('contacts/fetchItemsRequest');\nconst fetchItemsSuccess = createAction('contacts/fetchItemsSuccess');\nconst fetchItemsError = createAction('contacts/fetchItemsError');\n\nconst addItemRequest = createAction('contacts/addItemRequest');\nconst addItemSuccess = createAction('contacts/addItemSuccess');\nconst addItemError = createAction('contacts/addItemError');\n\nconst deleteItemRequest = createAction('contacts/deleteItemRequest');\nconst deleteItemSuccess = createAction('contacts/deleteItemSuccess');\nconst deleteItemError = createAction('contacts/deleteItemError');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default {\n  fetchItemsRequest,\n  fetchItemsSuccess,\n  fetchItemsError,\n  addItemRequest,\n  addItemSuccess,\n  addItemError,\n  deleteItemRequest,\n  deleteItemSuccess,\n  deleteItemError,\n  changeFilter,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3-ums\",\"list\":\"Header_list__2jJf4\",\"link\":\"Header_link__2Z0Mt\",\"activeLink\":\"Header_activeLink__28ui9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthNav\":\"AuthNav_AuthNav__1irrk\",\"link\":\"AuthNav_link__1eWWI\",\"activeLink\":\"AuthNav_activeLink__3wFLE\"};","import axios from 'axios';\nimport authActions from './auth-actions';\n\nconst {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} = authActions;\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(tok) {\n    axios.defaults.headers.common.Authorization = `Bearer ${tok}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credential => async dispatch => {\n  dispatch(registerRequest());\n  try {\n    const { data } = await axios.post('/users/signup', credential);\n    token.set(data.token);\n    dispatch(registerSuccess(data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\nconst login = credential => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    const { data } = await axios.post('/users/login', credential);\n    token.set(data.token);\n    dispatch(loginSuccess(data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\nconst logout = () => async dispatch => {\n  dispatch(logoutRequest());\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n    dispatch(logoutSuccess());\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) return;\n\n  token.set(persistedToken);\n\n  dispatch(getCurrentUserRequest());\n  try {\n    const { data } = await axios.get('/users/current');\n    dispatch(getCurrentUserSuccess(data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, login, logout, getCurrentUser };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserMenu\":\"UserMenu_UserMenu__2zFYt\",\"button\":\"UserMenu_button__2IlUs\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__z--Sd\"};"],"sourceRoot":""}